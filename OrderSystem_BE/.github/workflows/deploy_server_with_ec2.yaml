# workflow(스크립트 전체)의 이름을 지정
name: Deploy to EC2 With Jar

# push 이벤트 지정 (트리거 동작)
# main branch에 push 될 때마다 workflow가 실행되도록 지정
on:
  push:
    branches:
    - dev
      
jobs:
  # 작업의 이름 지정
  build-and-deploy:
    # 가상의 작업 공간(가상 서버)에 ubuntu 설치
    runs-on: ubuntu-latest
    steps:
      # 소스 코드를 ubuntu로 가져옴
    - uses: actions/checkout@v2

    # github 소스 코드를 가상의 작업 공간
    - name: Set up JDK 11
      # 쉽게 자바를 설치할 수 있는 라이브러리를 받아와서 java 설치
      uses: actions/setup-java@v2
      with: 
        java-version: '11'
        distribution: 'temurin'

    - name: Build with Gradle
      # 배포할 폴더로 이동
      working-directory: ./ordering
      # 실행 가능한 jar파일만 생성 (plain jar 미생성)
      run: |
        chmod +x ./gradlew 
        ./gradlew bootJar

    - name: Copy jar to EC2
      uses: appleboy/scp-action@master
      with:
        # Github Secret 처리
        host: ${{ secrets.EC2_HOST1 }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "./ordering/build/libs/*.jar"
        # 우분투 경로
        target: "/home/${{ secrets.EC2_USERNAME }}"
    
    - name: install java ans run jar on ec2
      uses: appleboy/ssh-action@master
      with: 
        host: ${{ secrets.EC2_HOST1 }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        # 자바설치하고 DB의 세팅 값을 자동설정
        script: |
          if ! type java > /dev/null; then
            sudo apt update && sudo apt install openjdk-11-jdk -y
          else
            echo "java is alredy installed"
          fi
          sudo killall java || true
          nohup java -jar /home/${{ secrets.EC2_USERNAME }}/ordering/build/libs/*.jar \
          --spring.datasource.url=jdbc:mariadb://${{ secrets.DB_HOST }}:3306/ordering \
          --spring.datasource.username=${{ secrets.DB_USERNAME }} \
          --spring.datasource.password=${{ secrets.DB_PASSWORD }} > /home/${{ secrets.EC2_USERNAME }}/app.log 2>&1 &

    - name: Copy jar to second server EC2
      uses: appleboy/scp-action@master
      with:
        # Github Secret 처리
        host: ${{ secrets.EC2_HOST2 }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "./ordering/build/libs/*.jar"
        # 우분투 경로
        target: "/home/${{ secrets.EC2_USERNAME }}"
    
    - name: install java ans run jar on second server ec2
      uses: appleboy/ssh-action@master
      with: 
        host: ${{ secrets.EC2_HOST2 }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        # 자바설치하고 DB의 세팅 값을 자동설정
        script: |
          if ! type java > /dev/null; then
            sudo apt update && sudo apt install openjdk-11-jdk -y
          else
            echo "java is alredy installed"
          fi
          sudo killall java || true
          nohup java -jar /home/${{ secrets.EC2_USERNAME }}/ordering/build/libs/*.jar \
          --spring.datasource.url=jdbc:mariadb://${{ secrets.DB_HOST }}:3306/ordering \
          --spring.datasource.username=${{ secrets.DB_USERNAME }} \
          --spring.datasource.password=${{ secrets.DB_PASSWORD }} > /home/${{ secrets.EC2_USERNAME }}/app.log 2>&1 &
